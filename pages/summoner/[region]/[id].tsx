import axios from "axios";
import { GetServerSideProps, GetServerSidePropsContext } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { loadProgressBar } from "x-axios-progress-bar";
import "x-axios-progress-bar/dist/nprogress.css";
import Header from "../../../components/Header";

// https://github.com/mszkb/progress-bar-4-axios#readme
loadProgressBar();
interface Props {
  region: string;
  id: string;
  data: any;
}

export default function Summoner(props: Props) {
  const [state, setState] = useState({
    totalHoursSpent: 0,
    dailyAverageHoursSpent: 0,
    firstGameDate: undefined,
    matchesPlayed: 0,
    profileIcon: "",
    summonerName: "",
    summonerLevel: 0,
  });

  console.log("props.data", props.data);
  const profileIcon =
    "http://ddragon.leagueoflegends.com/cdn/12.5.1/img/profileicon/546.png";

  useEffect(() => {
    axios
      .get(`../../api/hours/${props.region}/${props.id}`)
      .then((res) => {
        setState(res.data);
      })
      .catch((error) => {
        console.error("Post.tsx error:", error);
      });
  }, []);

  return (
    <>
      <Head>
        <title>{props.id} - LoL Hours</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      {state.profileIcon && (
        <>
          {/* Summoner Info */}
          <div className="bg-gray-600 p-6 justify-center content-center self-stretch flex ">
            <Image
              src={state.profileIcon}
              alt="Summoner Icon"
              width={120}
              height={120}
              className="rounded-2xl"
            />
            <p className="text-3xl">{state.summonerName}</p>
            <p className="text-3xl">{state.summonerLevel}</p>
            <p className="text-3xl">
              Lorem ipsum dolor sit amet consectetur, adipisicing elit.
            </p>
          </div>
          <div className="flex flex-col">
            <p className="bg-gray-300">1</p>
            <p className="bg-gray-300">2</p>
            <p className="bg-gray-300">3</p>
            <p className="bg-gray-300">4</p>
          </div>
        </>
      )}
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  const { region, id } = context.params!;
  return {
    props: {
      region,
      id,
    },
  };
};
